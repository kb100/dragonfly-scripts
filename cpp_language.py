from dragonfly import *


class CPlusPlusRule(MappingRule):
    mapping = {
        'align as': 'alignas',
        'align of': 'alignof',
        'and': '&&',
        'and (eek|equal)': '&=',
        '(A S M|assembly)': 'asm',
        'atomic cancel': 'atomic_cancel',
        'atomic commit': 'atomic_commit',
        'atomic noexcept': 'atomic_noexcept',
        'auto': 'auto',
        '(bit and|ref)': '&',
        'bit or': '|',
        'bool': 'bool',
        'break': 'break',
        'case': 'case',
        'catch': 'catch',
        'char': 'char',
        'char eight T': 'char8_t',
        'char sixteen T': 'char16_t',
        'char thirty two T': 'char32_t',
        'class': 'class',
        '(tilde|compl)': '~',
        'concept': 'concept',
        'const': 'const',
        'const eval': 'consteval',
        'const expr': 'constexpr',
        'const init': 'constinit',
        'const cast': 'const_cast',
        'continue': 'continue',
        'co await': 'co_await',
        'co return': 'co_return',
        'co yield': 'co_yield',
        'deckle type': 'decltype',
        'default': 'default',
        '(Dell|delete)': 'delete',
        'do': 'do',
        'double': 'double',
        'dynamic cast': 'dynamic_cast',
        'else': 'else',
        '(E num|enum)': 'enum',
        'explicit': 'explicit',
        'export': 'export',
        'extern': 'extern',
        'false': 'false',
        'float': 'float',
        'for': 'for',
        'friend': 'friend',
        'go to': 'goto',
        'if': 'if',
        'inline': 'inline',
        'int': 'int',
        'long': 'long',
        'mutable': 'mutable',
        'name space': 'namespace',
        'new': 'new',
        'no except': 'noexcept',
        'not': '!',
        'not (eek|equal)': '!=',
        'null (pointer|putter|P T R)': 'nullptr',
        'operator': 'operator',
        'or': '||',
        'or (eek|equal)': '|=',
        'private': 'private',
        'protected': 'protected',
        'public': 'public',
        'reflex purr': 'reflexpr',
        'register': 'register',
        'reinterpret cast': 'reinterpret_cast',
        'requires': 'requires',
        'return': 'return',
        'short': 'short',
        'signed': 'signed',
        'size of': 'sizeof',
        'static': 'static',
        'static assert': 'static_assert',
        'static cast': 'static_cast',
        'struct': 'struct',
        'switch': 'switch',
        'synchronized': 'synchronized',
        'template': 'template',
        'this': 'this',
        'thread local': 'thread_local',
        'throw': 'throw',
        'true': 'true',
        'try': 'try',
        'type def': 'typedef',
        'type (I D|id)': 'typeid',
        'type name': 'typename',
        'union': 'union',
        'unsigned': 'unsigned',
        'using': 'using',
        'virtual': 'virtual',
        'void': 'void',
        'volatile': 'volatile',
        '(W|dub|wide) char T': 'wchar_t',
        'while': 'while',
        'ex or': '^',
        'ex or (eek|equal)': '^=',

        'final': 'final',
        'override': 'override',
        'transaction safe': 'transaction_safe',
        'transaction safe dynamic': 'transaction_safe_dynamic',

        '(standard|stid|stud|S T D)': 'std',
        'star': '*',
        '(box|scope|global)': '::',

        # 'if': 'if',
        '(L if|el if|elif)': 'elif',
        # 'else':'else'
        'end if': 'endif',
        'if def': 'ifdef',
        'if N def': 'ifndef',
        'define': 'define',
        'undef': 'undef',
        'include': 'include',
        'line': 'line',
        'error': 'error',
        'pragma': 'pragma',
        'defined': 'defined',
        'has include': '__has_include',
        'has C P P attribute': '__has_cpp_attribute',

        # 'export': 'export',
        'import': 'import',
        'module': 'module',

    }
